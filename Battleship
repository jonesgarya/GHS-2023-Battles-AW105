import java.util.*;
public class Battleship extends Screen
{
    //private ArrayList<Player> players = new ArrayList<Player>();
    Screen pub = new Screen(true);
    Screen van = new Screen(null);
    private final int shipCount = Player.shipCount();
    public void run()
    {
        setPublicActive(van);
        int humCount = readInt("How many Human players? ");
        int comCount = readInt("How many Computer players? ");
        if(humCount + comCount == 2)
        {   switch(humCount)
            {
                case 1:
                    PvC();
                    break;
                case 2:
                    PvP();
                    break;
                case 0:
                    CvC();
            }
        }
        else if (humCount + comCount > 2)
        {
            MultiPlayer(humCount, comCount);
        }
        else if (humCount + comCount == 1)
        {
            SinglePlayer(humCount);
        }
        else
        {
            println("Error. Please try a PvC game, on the house.");
        }
        
    }
    
    private void MultiPlayer(int peeps, int coms)
    {
        println("Error, not set up yet. Please try a PvC game, on the house.");
    }
    private void SinglePlayer(int peeps)
    {
        if(peeps == 1)
        {SinglePlayer(new Player(), new Computer());}
        else
        {SinglePlayer(new Computer(), new Computer());}
    }
    private void SinglePlayer(Player p, Computer c)
    {
        boolean mode = readBoolean("Would you like to place instead of guessing?");
        if(mode)
        {
            c.opponent = p;
            for(int i : p.SHIP_LENGTHS)
            {
                println();
                p.addShip(new Ship(i));
            }
        }
        else
        {
            p.opponent = c;
            for(int i : p.SHIP_LENGTHS)
            {
                c.addShip(new Ship(i));
            }
        }
        int round = 0;
        if(mode)
        {
            while((p.getHits() < shipCount))
            {
                println("Round : " + ++round);
                p.printLatestGuess();
                println("");
                if(c.guess())
                {
                    println("");
                    println("They got it.");
                }
                else
                {
                    println("");
                    println("They missed!");
                }
                readLine("");
            }
            println("");
            println("Game!");
        }
        else
        {
            while((c.getHits() < shipCount))
            {
                println("Round : " + ++round);
                c.getMyBoard().printHM();
                println("");
                if(p.guess())
                {
                    println("");
                    println("I got it!");
                }
                else
                {
                    println("");
                    println("I missed.");
                }
            }
            println("");
            println("Game!");
            println((mode? p:c).getMisses() + " try to get a " + (mode? "lower":"higher") + " score next time");
            
        }
    }
    private void SinglePlayer(Computer p, Computer c)
    {
        c.opponent = p;
        for(int i : p.SHIP_LENGTHS)
        {
            println();
            p.addShip(new Ship(i));
        }
        int round = 0;
        while((p.getHits() < shipCount))
        {
            println("Round : " + ++round);
            p.printLatestGuess();
            println("");
            if(c.guess())
            {
                println("");
                println("They got it.");
            }
            else
            {
                println("");
                println("They missed!");
            }
            readLine("");
        }
        println("");
        println("Game!");
    }
    
    
    private void CvC()
    {tP(new Computer(), new Computer(), null);}
    private void PvC()
    {tP(new Player(), new Computer(), false);}
    private void PvP()
    {tP(new Player(), new Player(), true);}
    private void tP(Player p, Player c, Boolean type)
    {
        c.opponent = p;
        p.opponent = c;
        double round = 0;
        if(type != null && type)
        {new Screen(false); new Screen(false); nextScreen();}
        for(int i : p.SHIP_LENGTHS)
        {
            if(type != null && type){nextScreen(); van.setPublicActive();}
            println();
            //println("Add a new ship of length " + i + " to your board.");
            p.addShip(new Ship(i));
            if(type != null && type){nextScreen(); van.setPublicActive();}
            println();
            c.addShip(new Ship(i));
        }
        if(type == null){p.pMyShips(); c.pMyShips();}
        boolean turn = Randomizer.nextBoolean();
        double turnCount = 0;
        if(type != null && type && turn){nextScreen();}
        while (true)
        {
            boolean correct;
            println("");  println("");
            if(turn)
            {
                println("Your Turn! " + ((type == null || type) ? "(p1) " : "") + (int)round);
                if(type != null){p.pTheirBoard();} // !=
                else{c.getMyBoard().printHMS();}
                println();
                correct = p.guess();
                if(correct)
                {
                    println("");
                    println("I got it!");
                }
                else
                {
                    println("");
                    println("I missed it.");
                }
            }
            else
            {
                println((type == null || type)? "Your Turn! (p2)" + (int)round: "Their Turn. " + (int)round);
                if(type != null){c.pTheirBoard();} //!=
                else{p.getMyBoard().printHMS();}
                println("");
                correct = c.guess();
                if(correct)
                {
                    println("");
                    println(type != null && type ?  "I got it!" : "They got it.");
                }
                else
                {
                    println("");
                    println(type != null && type ?  "I missed it." : "They missed!");
                }
            }
            if(type == null){readLine("");}
            if(type != null && type){nextScreen();}
            if((p.getHits() >= shipCount) || (c.getHits() >= shipCount))
            {break;}
            //println(p.getHits());
            //println(c.getHits());
            //println(shipCount);
            turn = !turn;
            round +=.5;
            if(type != null && type){
                if(turn)
                {p.printLatestGuess();}
                else
                {c.printLatestGuess();}
                println(correct ? "They got it." : "They missed!");
            }
        }  
        pub.setPublicActive();
        println(""); println(""); println("");
        if(turn)
        {
            println("You Won!");
            println("Take a look at how close it was.");
            p.pMyShips();
            p.pMyBoard();
        }
        else
        {
            println("You lost.");
            println("Take a look at how close you were.");
            c.pMyShips();
            c.pMyBoard();
        }
    }
}
