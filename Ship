public class Ship
{
    private int length;
    private int row = -1;
    private int column = -1;
    private int direction = -1;
    
    public Ship(int newlength)
    {
        this.length = newlength;
    }
    public boolean isLocationSet()
    {
        return row == -1 || column == -1;
    }
    public boolean isDirectionSet()
    {
        return direction != -1;
    }
    
    public Ship setLocation(int row, int column)
    {
        this.row = row == -1 ? -1 : Math.abs(row % Grid.size); 
        this.column = column == -1 ? -1 : Math.abs(column % Grid.size); 
        return this;
    }
    public Ship setDirection(boolean direction)
    {
        this.direction = direction ? 1 : 0;
        return this;
    }
    
    public int getRow()
    {   return row; }
    public int getColumn()
    {   return column;  }
    public int getDirection()
    {   return direction;   }
    public boolean getD()
    {   return direction == 1;  }
    public int getLength()
    {   return length;  }
    /**public String directionToString() //never called
    {
        return direction == 1 ? "Vertical" : (direction == 0? "Horizonatal" : "Not Set");
    }**/
    public int endRow() // adds the row to the length if horizontal or 0 if not
    {
        return row + length * (direction == -1 ? 0 : direction);
    }
    public int endColumn() //adds the column to the length if verticle or 0 if not
    {
        return column + length * (direction == -1 ? 0 : 1- direction);
    }
    
    public String toString()
    {
        return "A ship spanning from " + row + ", " + column + " to " + endRow() + ", " + endColumn() + ".";
    }
}
