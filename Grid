import java.util.*;
public class Grid extends Screen
{
    public static int size = 10;
    
    private Location[][] grid = null;
    private Player owner = null;
    private Location latestGuess;
    
    public static int map(int in, int inMin, int inMax, int outMin, int outMax)
    {
        return (int)( ( (in - inMin - 0.0) / (inMax - inMin) ) * (outMax - outMin) + outMin );
    }
    
    public Grid(){
        grid = new Location[size][size];
        for(int i = 0; i<size; i++)
        {
            Location[] a = new Location[size];
            for(int j = 0; j<size; j++)
            {
                a[j] = new Location();
            }
            grid[i] = a;
        }
    }
    public Grid(Player p)
    {
        this();
        ownedBy(p);
    }
    public void ownedBy(Player p)
    {
        owner = p;
    }
    public boolean guess(int r, int c) // Marks the location has been guessed and returns if it
    {
        if(get(r,c).guess())
        {owner.hit();}
        else
        {owner.miss();}
        
        latestGuess = grid[r][c];
        return grid[r][c].hasShip();
    }
    /**public boolean status(int row, int column) // all of these are never called.
    {
        return !grid[row][column].isUnguessed() ? grid[row][column].checkHit() : null;
    }
    public boolean unguessed(int row, int column)
    {
        return grid[row][column].isUnguessed();
    } **/
    public void setShip(int row, int column, boolean ship)
    {
        grid[row][column].setShip(ship);
    }
    /**public boolean hasShip(int row, int column)
    {
        return grid[row][column].hasShip();
    }**/
    public Location get(int row, int column)
    {
        return grid[row][column];
    }
    public boolean addShip(Ship s)
    {
        //println(s.getLength());
        boolean out = true;
        for(int i = 0; i<s.getLength() && out; i++)
        {
            int a = map(i, 0, s.getLength(), s.getRow(), s.endRow());
            int b = map(i, 0, s.getLength(), s.getColumn(), s.endColumn());
            out = out && a<size & b<size && !get(a,b).hasShip();
        }
        for(int i = 0; i<s.getLength() && out; i++)
        {
            int a = map(i, 0, s.getLength(), s.getRow(), s.endRow());
            int b = map(i, 0, s.getLength(), s.getColumn(), s.endColumn());
            setShip(a,b, true);
        }
        return out;
    }
    
    public void printHM() //prints hits as H and Misses as 0. Unguessed is -
    {
        println("");
        print("  1 2 3 4 5 6 7 8 9 10");
        for(int i = 0; i<10; i++)
        {
            println("");
            print("" + (char)( i + (int) 'a'));
            for(int j = 0; j<10; j++)
            {
                print(" " + (grid[i][j].isUnguessed() ? "-" : (grid[i][j].hasShip() ? "H" : "O")));
    }   }   }
    
    public void printShips() //Prints Ships as X and non-ships as -
    {
        println("");
        print("  1 2 3 4 5 6 7 8 9 10");
        for(int i = 0; i<10; i++)
        {
            println("");
            print("" + (char)( i + (int) 'a'));
            for(int j = 0; j< 10; j++)
            {
                String a = grid[i][j].hasShip() ? "X" : "-";
                print(" " + a);
                
    }   }   }
    
    public void printHMS() //Prints hits as H and Misses as 0. Unguessed ships are X, else are -
    {
        println("");
        print("  1 2 3 4 5 6 7 8 9 10");
        for(int i = 0; i<10; i++)
        {
            println("");
            print("" + (char)( i + (int) 'a'));
            for(int j = 0; j< 10; j++)
            {
                String a;
                if(grid[i][j].isUnguessed())
                {
                    a = grid[i][j].hasShip() ? "X" : "-";
                }
                else
                {
                    a = grid[i][j].hasShip() ? "H" : "O";
                }
                print(" " + a);
                
    }   }   }
    
    public void printLG() //printHMS but marks latest guess as L if hit and l if miss
    {
        println("");
        print("  1 2 3 4 5 6 7 8 9 10");
        for(int i = 0; i<10; i++)
        {
            println("");
            print("" + (char)( i + (int) 'a'));
            for(int j = 0; j< 10; j++)
            {
                String a;
                if(grid[i][j].isUnguessed())
                {
                    a = grid[i][j].hasShip() ? "X" : "-";
                }
                else
                {
                    if(grid[i][j] == latestGuess)
                    {
                        a = grid[i][j].hasShip() ? "L" : "l";
                    }
                    else
                    {
                        a = grid[i][j].hasShip() ? "H" : "O";
                    }
                }
                print(" " + a);
                
    }   }   }
}
